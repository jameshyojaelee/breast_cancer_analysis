"
# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"
# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
# Create diagnosis vector for later
diagnosis <- wisc.df$diagnosis
### Q1. How many observations are in this dataset?
ncols(wisc.df)
569 observation
### Q1. How many observations are in this dataset?
ncol(wisc.df)
569 observation
### Q1. How many observations are in this dataset?
nrow(wisc.df)
569 observation
nrow(wisc.df[wisc.df$diagnosis == M])
nrow(wisc.df[wisc.df$diagnosis == 'M'])
View(wisc.df)
length(wisc.df[wisc.df$diagnosis == "M"])
wisc.df[wisc.df$diagnosis == "M"]
length(wisc.df$diagnosis == "M")
length([wisc.df$diagnosis == "M"])
wisc.df[wisc.df$diagnosis == "M"]
wisc.df[wisc.df$diagnosis == "M"]
View(wisc.df)
wisc.df[which(wisc.df$diagnosis == "M")]
wisc.df[which(wisc.df$diagnosis == "M"),]
nrow(wisc.df[which(wisc.df$diagnosis == "M"),])
head(wisc.df)
# Check column means and standard deviations
colMeans(wisc.data)
apply(wisc.data,2,sd)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data)
wisc.pr
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(t(wisc.data))
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp((wisc.data))
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(t(wisc.data))
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(t(wisc.data))
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data)
summary(wisc.pr)
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
biplot(wisc.pr)
# Scatter plot observations by components 1 and 2
plot(wisc.pr$diagnosis[,1], wisc.pr$diagnosis[,2], col = diagnosis ,
xlab = "PC1", ylab = "PC2")
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis ,
xlab = "PC1", ylab = "PC2")
wisc.pr
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis ,
xlab = "PC1", ylab = "PC2")
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis ,
xlab = "PC1", ylab = "PC2")
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis ,
xlab = "PC1", ylab = "PC3")
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=diagnosis) +
geom_point()
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
# Load the ggplot2 package
library(ggplot2)
# Load the ggplot2 package
library(ggplot2)
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=diagnosis) +
geom_point()
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=diagnosis) +
geom_bar()
# Make a scatter plot colored by diagnosis
ggplot(df) +
aes(PC1, PC2, col=diagnosis) +
geom_point()
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
ylim = c(0, 1), type = "o")
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
ylim = c(0, 1), type = "o")
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
ylim = c(0, 1), type = "o")
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
install.packages("factoextra")
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
wisc.pr$rotation[,1])
wisc.pr$rotation[,1]
grps <- cutree(wisc.pr.hclust, k=2)
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
plot(wisc.pr$x[,1:2], col=g)
plot(wisc.pr$x[,1:2], col=diagnosis)
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
data.dist
wisc.hclust <- hclust(data.dist, data.scaled)
wisc.hclust <- hclust(data.dist, scale == data.scaled)
wisc.hclust <- hclust(data.dist, scale = data.scaled)
?hclust
wisc.hclust <- hclust(data.dist)
wisc.hclust
wisc.hclust <- hclust(data.dist, method = "complete")
plot(wisc.hclust)
abline(wisc.hclust, col="red", lty=2)
plot(wisc.hclust)
abline(data.dist, col="red", lty=2)
plot(wisc.hclust)
abline(data.scaled, col="red", lty=2)
?abline
plot(wisc.hclust)
abline(wisc.hclust$height, col="red", lty=2)
plot(wisc.hclust)
abline(wisc.hclust, col="red", lty=2)
wisc.hclust
wisc.hclust$height
abline(mean(wisc.hclust$height), col="red", lty=2)
plot(wisc.hclust)
abline(mean(wisc.hclust$height), col="red", lty=2)
plot(wisc.hclust)
abline(mean(wisc.hclust$height), col="red", lty=2)
plot(wisc.hclust)
abline(mean(wisc.hclust$height), col="red", lty=2)
plot(wisc.hclust)
abline(wisc.hclust$height, col="red", lty=2)
plot(wisc.hclust)
abline(wisc.hclust$height, col="red", lty=2)
plot(wisc.hclust)
abline(mean(wisc.hclust$height), col="red", lty=2)
plot(wisc.hclust)
abline(mean(wisc.hclust$height), col="red", lty=2)
mean(wisc.hclust$height)
wisc.hclust$height
wisc.hclust$order
plot(wisc.hclust)
abline(wisc.hclust$height[which(wisc.hclust$order ==4)], col="red", lty=2)
plot(wisc.hclust)
abline(wisc.hclust$height[which(wisc.hclust$order == 4)], col="red", lty=2)
wisc.hclust$height[which(wisc.hclust$order == 4)]
plot(wisc.hclust)
abline(wisc.hclust$height[which(wisc.hclust$method == 4)], col="red", lty=2)
wisc.hclust$height[which(wisc.hclust$method == 4)]
plot(wisc.hclust)
abline(wisc.hclust$height[which(wisc.hclust$call == 4)], col="red", lty=2)
wisc.hclust$height[which(wisc.hclust$call == 4)]
plot(wisc.hclust)
abline(wisc.hclust$height[which(wisc.hclust$dist.method == 4)], col="red", lty=2)
wisc.hclust$height[which(wisc.hclust$dist.method == 4)]
plot(wisc.hclust)
abline(wisc.hclust$height, col="red", lty=2)
plot(wisc.hclust)
abline(wisc.hclust, col="red", lty=2)
grps <- cutree(wisc.pr.hclust, k=2)
grps <- cutree(wisc.hclust, k=2)
table(grps)
wisc.pr.hclust <- hclust(data.dist, method = "ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
wisc.hclust.clusters <- cutree(wisc.hclust, h=4)
table(wisc.hclust.clusters, diagnosis)
?cutree
wisc.hclust.clusters <- cutree(wisc.hclust, h=4)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust
summary(wisc.hclust)
cutree(wisc.hclust, h = 4)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 4)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 3)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 5)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 7)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 2)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 3)
table(wisc.hclust.clusters, diagnosis)
wisc.hclust.clusters <- cutree(wisc.hclust, k = 8)
table(wisc.hclust.clusters, diagnosis)
wisc.pr.hclust <- hclust(data.dist, method = "ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
wisc.pr.hclust <- hclust(wisc.data, method = "ward.D2")
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method = "ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
table(grps, diagnosis)
plot(wisc.pr$x[,1:2], col=grps)
plot(wisc.pr$x[,1:2], col=diagnosis)
g <- as.factor(grps)
levels(g)
g <- relevel(g,2)
levels(g)
plot(wisc.pr$x[,1:2], col=g)
install.packages("rgl")
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
getwd()
data <- read.csv("broward_data.csv")
View(data)
View(data)
